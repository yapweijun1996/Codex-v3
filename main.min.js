import{openModal,closeModal}from"./js/modal.js";import{debounce,filterTableRows,initPagination}from"./js/table-utils.js";import{initReportChart,initAnalyticsCharts,updateAnalyticsCharts,initDashboardCharts,updateDashboardUserChart}from"./js/charts.js";const toggle=document.querySelector(".nav-toggle"),sidebarContainer=document.getElementById("sidebar-container"),sidebar=document.getElementById("sidebar"),overlay=document.getElementById("overlay"),themeToggle=document.querySelector(".theme-toggle"),closeBtn=document.getElementById("sidebar-close"),pageLoader=document.getElementById("page-loader"),firstLink=sidebar?sidebar.querySelector("a"):null;let initialLoad=!0;const tableSkeleton=document.querySelector(".table__skeleton"),userTable=document.getElementById("user-table"),filterInput=document.getElementById("user-filter"),addUserBtn=document.getElementById("add-user-btn"),form=document.getElementById("settings-form"),profileForm=document.getElementById("profile-form"),toast=document.getElementById("toast"),chartCanvas=document.getElementById("reportChart"),taskForm=document.getElementById("task-form"),taskInput=document.getElementById("task-input"),taskTable=document.getElementById("task-table"),calendarTable=document.getElementById("calendar-table"),calendarMonth=document.getElementById("calendar-month"),calendarPrev=document.getElementById("calendar-prev"),calendarNext=document.getElementById("calendar-next"),userCountEl=document.getElementById("user-count"),usersChartCanvas=document.getElementById("usersChart"),activityChartCanvas=document.getElementById("activityChart"),statusTable=document.getElementById("status-table"),taskCountEl=document.getElementById("task-count"),systemHealthEl=document.getElementById("system-health");export function showLoader(){pageLoader&&pageLoader.classList.add("visible")}export function hideLoader(){pageLoader&&pageLoader.classList.remove("visible")}hideLoader();const sunIcon='<svg width="20" height="20" viewBox="0 0 24 24" aria-hidden="true" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="5"/><line x1="12" y1="1" x2="12" y2="3"/><line x1="12" y1="21" x2="12" y2="23"/><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"/><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"/><line x1="1" y1="12" x2="3" y2="12"/><line x1="21" y1="12" x2="23" y2="12"/><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"/><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"/></svg>',moonIcon='<svg width="20" height="20" viewBox="0 0 24 24" aria-hidden="true" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/></svg>',applyTheme=()=>{const t=localStorage.getItem("theme"),e=window.matchMedia("(prefers-color-scheme: dark)").matches,n="light"===t||!t&&!e;document.documentElement.classList.toggle("light",n),themeToggle&&(themeToggle.setAttribute("aria-pressed",n?"true":"false"),themeToggle.innerHTML=n?sunIcon:moonIcon)},updateToggle=()=>{sidebarContainer.classList.contains("open")?(toggle.setAttribute("aria-label","Close navigation"),toggle.setAttribute("aria-expanded","true"),overlay.classList.add("visible"),localStorage.setItem("sidebarOpen","true"),!initialLoad&&firstLink&&firstLink.focus()):(toggle.setAttribute("aria-label","Open navigation"),toggle.setAttribute("aria-expanded","false"),overlay.classList.remove("visible"),localStorage.setItem("sidebarOpen","false"),initialLoad||toggle.focus()),initialLoad=!1};toggle.addEventListener("click",(()=>{sidebarContainer.classList.toggle("open"),updateToggle()})),closeBtn&&closeBtn.addEventListener("click",(()=>{sidebarContainer.classList.remove("open"),updateToggle()})),"true"===localStorage.getItem("sidebarOpen")&&sidebarContainer.classList.add("open"),updateToggle(),document.addEventListener("keydown",(t=>{"Escape"===t.key&&sidebarContainer.classList.contains("open")&&(sidebarContainer.classList.remove("open"),updateToggle())})),overlay.addEventListener("click",(()=>{sidebarContainer.classList.remove("open"),updateToggle()}));const showToast=t=>{toast&&(toast.textContent=t,toast.classList.add("show"),setTimeout((()=>toast.classList.remove("show")),2e3))},API_BASE="./api",fetchUsers=async()=>{if(!userTable)return[];try{const t=await fetch("/api/users");if(!t.ok)return showToast?showToast("Failed to fetch users"):console.error("Failed to fetch users"),[];const e=await t.json(),n=userTable.querySelector("tbody");return n.innerHTML="",e.forEach((t=>{const e=addUserBtn?`<button class="btn edit-user-btn" aria-label="Edit ${t.name}">Edit</button> <button class="btn delete-user-btn" aria-label="Delete ${t.name}">Delete</button>`:`<button class="btn edit-user-btn" aria-label="Edit ${t.name}">Edit</button>`,a=document.createElement("tr");a.innerHTML=`<td>${t.name}</td><td><span class="label ${"Active"===t.status?"success":"danger"}">${t.status}</span></td><td>${e}</td>`,n.appendChild(a)})),e}catch(t){return console.error("Failed to fetch users",t),showToast&&showToast("Failed to fetch users"),[]}},fetchLogs=async()=>{if(!userTable)return[];try{const t=await fetch("/api/logs");if(!t.ok)return showToast?showToast("Failed to fetch logs"):console.error("Failed to fetch logs"),[];const e=await t.json(),n=userTable.querySelector("tbody");return n.innerHTML="",e.forEach((t=>{const e=document.createElement("tr");e.innerHTML=`<td>${t.time}</td><td>${t.user}</td><td>${t.action}</td>`,n.appendChild(e)})),e}catch(t){return console.error("Failed to fetch logs",t),showToast&&showToast("Failed to fetch logs"),[]}},fetchTasks=async()=>{if(!taskTable)return[];try{const t=await fetch("/api/tasks");if(!t.ok)return showToast?showToast("Failed to fetch tasks"):console.error("Failed to fetch tasks"),[];const e=await t.json(),n=taskTable.querySelector("tbody");return n.innerHTML="",e.forEach((t=>{const e=document.createElement("tr");e.innerHTML=`<td>${t.name}</td><td><button class="btn edit-task-btn">Edit</button> <button class="btn delete-task-btn">Delete</button></td>`,n.appendChild(e)})),e}catch(t){return console.error("Failed to fetch tasks",t),showToast&&showToast("Failed to fetch tasks"),[]}},fetchStatus=async()=>{if(!statusTable)return[];try{const t=await fetch("/api/status");if(!t.ok)return showToast?showToast("Failed to fetch status"):console.error("Failed to fetch status"),[];const e=await t.json(),n=statusTable.querySelector("tbody");return n.innerHTML="",e.forEach((t=>{const e=document.createElement("tr");e.innerHTML=`<td>${t.service}</td><td><span class="label ${"Operational"===t.status?"success":"danger"}">${t.status}</span></td>`,n.appendChild(e)})),e}catch(t){return console.error("Failed to fetch status",t),showToast&&showToast("Failed to fetch status"),[]}};function updateUserMetrics(){if(!userTable||!userCountEl)return;const t=Array.from(userTable.querySelectorAll("tbody tr")),e=t.length,n=t.filter((t=>"Active"===t.querySelector("td:nth-child(2) .label")?.textContent.trim())).length;userCountEl.textContent=e,updateDashboardUserChart(n,e-n)}function updateTaskMetric(t){taskCountEl&&(taskCountEl.textContent=t)}function updateSystemHealthMetric(t){if(!systemHealthEl)return;const e=t.filter((t=>"Operational"===t.status)).length,n=t.length?Math.round(e/t.length*100):0;systemHealthEl.textContent=`${n}%`}function initTable(){if(!userTable)return;const t=userTable.querySelector("tbody");let e=Array.from(t.querySelectorAll("tr"));const n=initPagination(userTable),a=()=>{e=Array.from(t.querySelectorAll("tr")),n.update()},o=filterInput&&filterInput.dataset.columns?filterInput.dataset.columns.split(",").map(Number):null,s={},i=userTable.querySelectorAll("th.sortable");i.forEach(((a,o)=>{a.addEventListener("click",(()=>{const l=!s[o];s[o]=l,e.sort(((t,e)=>{const n=t.children[o].textContent.trim(),a=e.children[o].textContent.trim();return l?n.localeCompare(a):a.localeCompare(n)})),t.append(...e),i.forEach((t=>t.removeAttribute("aria-sort"))),a.setAttribute("aria-sort",l?"ascending":"descending"),n.update()}))})),filterInput&&filterInput.addEventListener("input",debounce((()=>{filterTableRows(e,filterInput.value,o),n.update()}),200));const l=t=>{const e=t.querySelector(".edit-user-btn"),n=t.querySelector(".delete-user-btn"),o=()=>{const a=t.children[0].textContent.trim();e&&e.setAttribute("aria-label",`Edit ${a}`),n&&n.setAttribute("aria-label",`Delete ${a}`)};o(),e&&e.addEventListener("click",(()=>{const e=t.children[0].textContent.trim(),n=t.querySelector("td:nth-child(2) .label").textContent.trim();openModal(`<form id="edit-user-form"><h3 id="edit-user-title">Edit User</h3><label>Username<input id="edit-username" type="text" value="${e}" required /></label><label>Status<select id="edit-status"><option value="Active"${"Active"===n?" selected":""}>Active</option><option value="Suspended"${"Suspended"===n?" selected":""}>Suspended</option></select></label><div class="modal-actions"><button type="submit" class="btn">Save</button><button type="button" class="btn" id="cancel-edit">Cancel</button></div></form>`,"edit-user-title");const a=document.getElementById("edit-user-form"),s=document.getElementById("cancel-edit");a.addEventListener("submit",(e=>{e.preventDefault(),t.children[0].textContent=document.getElementById("edit-username").value,o();const n=document.getElementById("edit-status").value,a=t.querySelector("td:nth-child(2) .label");a.textContent=n,a.classList.toggle("success","Active"===n),a.classList.toggle("danger","Active"!==n),updateUserMetrics(),closeModal()})),s.addEventListener("click",closeModal)})),n&&n.addEventListener("click",(()=>{t.remove(),a(),updateUserMetrics()}))};e.forEach(l),n.update(),updateUserMetrics(),addUserBtn&&addUserBtn.addEventListener("click",(()=>{openModal('<form id="add-user-form"><h3 id="add-user-title">Add User</h3><label>Username<input id="new-username" type="text" required /></label><label>Status<select id="new-status"><option value="Active">Active</option><option value="Suspended">Suspended</option></select></label><div class="modal-actions"><button type="submit" class="btn">Add</button><button type="button" class="btn" id="cancel-add">Cancel</button></div></form>',"add-user-title");const e=document.getElementById("add-user-form"),n=document.getElementById("cancel-add");e.addEventListener("submit",(e=>{e.preventDefault();const n=document.getElementById("new-username").value,o=document.getElementById("new-status").value,s=document.createElement("tr");s.innerHTML=`<td>${n}</td><td><span class="label ${"Active"===o?"success":"danger"}">${o}</span></td><td><button class="btn edit-user-btn" aria-label="Edit ${n}">Edit</button> <button class="btn delete-user-btn" aria-label="Delete ${n}">Delete</button></td>`,t.appendChild(s),l(s),a(),updateUserMetrics(),closeModal()})),n.addEventListener("click",closeModal)}))}function initTasks(){if(!taskTable)return;const t=taskTable.querySelector("tbody"),e=initPagination(taskTable),n=t=>{const n=t.querySelector(".edit-task-btn");n&&n.addEventListener("click",(()=>{const e=t.children[0].textContent.trim();openModal(`<form id="edit-task-form"><h3 id="edit-task-title">Edit Task</h3><input id="edit-task-input" type="text" value="${e}" required /><div class="modal-actions"><button type="submit" class="btn">Save</button><button type="button" class="btn" id="cancel-edit-task">Cancel</button></div></form>`,"edit-task-title");const n=document.getElementById("edit-task-form"),a=document.getElementById("cancel-edit-task");n.addEventListener("submit",(e=>{e.preventDefault(),t.children[0].textContent=document.getElementById("edit-task-input").value,closeModal()})),a.addEventListener("click",closeModal)}));const a=t.querySelector(".delete-task-btn");a&&a.addEventListener("click",(()=>{t.remove(),e.update()}))};Array.from(t.querySelectorAll("tr")).forEach(n),e.update(),taskForm&&taskForm.addEventListener("submit",(a=>{a.preventDefault();const o=taskInput.value.trim();if(!o)return;const s=document.createElement("tr");s.innerHTML=`<td>${o}</td><td><button class="btn edit-task-btn">Edit</button> <button class="btn delete-task-btn">Delete</button></td>`,t.appendChild(s),n(s),e.update(),taskForm.reset()}))}function initCalendar(){if(!calendarTable)return;let t=new Date,e=[];const n=calendarTable.querySelector("tbody"),a=()=>{const a=t.getFullYear(),o=t.getMonth();calendarMonth.textContent=t.toLocaleDateString(void 0,{month:"long",year:"numeric"});const s=new Date(a,o,1).getDay(),i=new Date(a,o+1,0).getDate();let l="<tr>";for(let t=0;t<s;t++)l+="<td></td>";for(let t=1;t<=i;t++){(s+t-1)%7==0&&1!==t&&(l+="</tr><tr>");const n=`${a}-${String(o+1).padStart(2,"0")}-${String(t).padStart(2,"0")}`,i=e.find((t=>t.date===n));l+=`<td${i?' class="event-day" data-title="'+i.title+'"':""}>${t}</td>`}l+="</tr>",n.innerHTML=l,n.querySelectorAll(".event-day").forEach((t=>{t.addEventListener("click",(()=>{const e=t.getAttribute("data-title");openModal(`<h3 id="event-title">${e}</h3><div class="modal-actions"><button id="close-event" class="btn">Close</button></div>`,"event-title"),document.getElementById("close-event").addEventListener("click",closeModal)}))}))};calendarPrev&&calendarPrev.addEventListener("click",(()=>{t.setMonth(t.getMonth()-1),a()})),calendarNext&&calendarNext.addEventListener("click",(()=>{t.setMonth(t.getMonth()+1),a()})),(async()=>{try{const t=await fetch("/api/events");t.ok&&(e=await t.json())}catch(t){console.error("Failed to fetch events",t)}a()})()}sidebar.querySelectorAll("a").forEach((t=>{t.addEventListener("click",(()=>{sidebarContainer.classList.remove("open"),updateToggle(),showLoader()}))})),themeToggle&&themeToggle.addEventListener("click",(()=>{const t=!document.documentElement.classList.contains("light");document.documentElement.classList.toggle("light",t),themeToggle.setAttribute("aria-pressed",t?"true":"false"),themeToggle.innerHTML=t?sunIcon:moonIcon,localStorage.setItem("theme",t?"light":"dark")}));const notifBtn=document.querySelector(".notification-btn");if(notifBtn&&notifBtn.addEventListener("click",(()=>{showLoader(),fetchNotifications().then((t=>{hideLoader();let e='<h3 id="notifications-title">Notifications</h3><ul class="notifications-list">'+t.map((t=>`<li>${t}</li>`)).join("")+'</ul><div class="modal-actions"><button id="close-notifications" class="btn">Close</button></div>';openModal(e,"notifications-title"),document.getElementById("close-notifications").addEventListener("click",closeModal)}))})),tableSkeleton&&userTable){const t=window.location.pathname;(t.includes("logs")?fetchLogs:fetchUsers)().then((()=>{tableSkeleton.remove(),userTable.hidden=!1,initTable(),t.includes("logs")||updateUserMetrics()}))}taskTable?fetchTasks().then(initTasks):document.getElementById("task-table")&&initTasks(),statusTable&&fetchStatus(),calendarTable&&initCalendar(),form&&form.addEventListener("submit",(t=>{t.preventDefault(),showToast("Settings saved")})),profileForm&&profileForm.addEventListener("submit",(t=>{t.preventDefault();openModal('<h3 id="profile-dialog-title">Save Changes</h3><p>Save profile changes?</p><div class="modal-actions"><button id="confirm-profile" class="btn">Yes</button><button id="cancel-profile" class="btn">Cancel</button></div>',"profile-dialog-title");const e=document.getElementById("confirm-profile"),n=document.getElementById("cancel-profile");e.addEventListener("click",(()=>{closeModal(),showToast("Profile updated")})),n.addEventListener("click",closeModal)})),initReportChart(chartCanvas,document.getElementById("report-range"));const visitorsCanvas=document.getElementById("visitorsChart"),sourceCanvas=document.getElementById("sourceChart"),startInput=document.getElementById("start-date"),endInput=document.getElementById("end-date"),applyBtn=document.getElementById("apply-range");initAnalyticsCharts(visitorsCanvas,sourceCanvas),initDashboardCharts(usersChartCanvas,activityChartCanvas),taskCountEl&&fetch("/api/tasks").then((t=>t.json())).then((t=>updateTaskMetric(t.length))),systemHealthEl&&fetch("/api/status").then((t=>t.json())).then(updateSystemHealthMetric),applyBtn&&applyBtn.addEventListener("click",(()=>updateAnalyticsCharts(startInput,endInput))),applyTheme();const notificationsList=document.getElementById("notifications-list");notificationsList&&fetchNotifications().then((t=>{notificationsList.innerHTML=t.map((t=>`<li>${t}</li>`)).join("")}));const notifBadge=document.getElementById("notification-badge");async function fetchNotifications(){try{const t=await fetch("/api/notifications");return t.ok?await t.json():[]}catch(t){return console.error("Failed to fetch notifications",t),[]}}function updateNotificationBadge(){notifBadge&&fetchNotifications().then((t=>{notifBadge.textContent=t.length,notifBadge.style.display=t.length?"inline-block":"none"}))}updateNotificationBadge(),"serviceWorker"in navigator&&window.addEventListener("load",(()=>{navigator.serviceWorker.register("service-worker.js")}));
