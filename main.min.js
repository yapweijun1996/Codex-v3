import{openModal,closeModal}from"./js/modal.js";import{debounce,filterTableRows,initPagination}from"./js/table-utils.js";import{initReportChart,initAnalyticsCharts,updateAnalyticsCharts,initDashboardCharts,updateDashboardUserChart}from"./js/charts.js";const toggle=document.querySelector(".nav-toggle"),sidebarContainer=document.getElementById("sidebar-container"),sidebar=document.getElementById("sidebar"),overlay=document.getElementById("overlay"),themeToggle=document.querySelector(".theme-toggle"),closeBtn=document.getElementById("sidebar-close"),pageLoader=document.getElementById("page-loader"),firstLink=sidebar?sidebar.querySelector("a"):null;let initialLoad=!0;const tableSkeleton=document.querySelector(".table__skeleton"),userTable=document.getElementById("user-table"),filterInput=document.getElementById("user-filter"),addUserBtn=document.getElementById("add-user-btn"),form=document.getElementById("settings-form"),profileForm=document.getElementById("profile-form"),toast=document.getElementById("toast"),chartCanvas=document.getElementById("reportChart"),taskForm=document.getElementById("task-form"),taskInput=document.getElementById("task-input"),taskTable=document.getElementById("task-table"),calendarTable=document.getElementById("calendar-table"),calendarMonth=document.getElementById("calendar-month"),calendarPrev=document.getElementById("calendar-prev"),calendarNext=document.getElementById("calendar-next"),userCountEl=document.getElementById("user-count"),usersChartCanvas=document.getElementById("usersChart"),activityChartCanvas=document.getElementById("activityChart"),statusTable=document.getElementById("status-table");export function showLoader(){pageLoader&&pageLoader.classList.add("visible")}export function hideLoader(){pageLoader&&pageLoader.classList.remove("visible")}hideLoader();const sunIcon='<svg width="20" height="20" viewBox="0 0 24 24" aria-hidden="true" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="5"/><line x1="12" y1="1" x2="12" y2="3"/><line x1="12" y1="21" x2="12" y2="23"/><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"/><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"/><line x1="1" y1="12" x2="3" y2="12"/><line x1="21" y1="12" x2="23" y2="12"/><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"/><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"/></svg>',moonIcon='<svg width="20" height="20" viewBox="0 0 24 24" aria-hidden="true" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/></svg>',applyTheme=()=>{const e=localStorage.getItem("theme"),t=window.matchMedia("(prefers-color-scheme: dark)").matches,n="light"===e||!e&&!t;document.documentElement.classList.toggle("light",n),themeToggle&&(themeToggle.setAttribute("aria-pressed",n?"true":"false"),themeToggle.innerHTML=n?sunIcon:moonIcon)},updateToggle=()=>{sidebarContainer.classList.contains("open")?(toggle.setAttribute("aria-label","Close navigation"),toggle.setAttribute("aria-expanded","true"),overlay.classList.add("visible"),localStorage.setItem("sidebarOpen","true"),!initialLoad&&firstLink&&firstLink.focus()):(toggle.setAttribute("aria-label","Open navigation"),toggle.setAttribute("aria-expanded","false"),overlay.classList.remove("visible"),localStorage.setItem("sidebarOpen","false"),initialLoad||toggle.focus()),initialLoad=!1};toggle.addEventListener("click",(()=>{sidebarContainer.classList.toggle("open"),updateToggle()})),closeBtn&&closeBtn.addEventListener("click",(()=>{sidebarContainer.classList.remove("open"),updateToggle()})),"true"===localStorage.getItem("sidebarOpen")&&sidebarContainer.classList.add("open"),updateToggle(),document.addEventListener("keydown",(e=>{"Escape"===e.key&&sidebarContainer.classList.contains("open")&&(sidebarContainer.classList.remove("open"),updateToggle())})),overlay.addEventListener("click",(()=>{sidebarContainer.classList.remove("open"),updateToggle()}));const showToast=e=>{toast&&(toast.textContent=e,toast.classList.add("show"),setTimeout((()=>toast.classList.remove("show")),2e3))},API_BASE="/api",fetchUsers=async()=>{if(!userTable)return[];try{const e=await fetch("/api/users");if(!e.ok)return showToast?showToast("Failed to fetch users"):console.error("Failed to fetch users"),[];const t=await e.json(),n=userTable.querySelector("tbody");return n.innerHTML="",t.forEach((e=>{const t=addUserBtn?`<button class="btn edit-user-btn" aria-label="Edit ${e.name}">Edit</button> <button class="btn delete-user-btn" aria-label="Delete ${e.name}">Delete</button>`:`<button class="btn edit-user-btn" aria-label="Edit ${e.name}">Edit</button>`,a=document.createElement("tr");a.innerHTML=`<td>${e.name}</td><td><span class="label ${"Active"===e.status?"success":"danger"}">${e.status}</span></td><td>${t}</td>`,n.appendChild(a)})),t}catch(e){return console.error("Failed to fetch users",e),showToast&&showToast("Failed to fetch users"),[]}},fetchLogs=async()=>{if(!userTable)return[];try{const e=await fetch("/api/logs");if(!e.ok)return showToast?showToast("Failed to fetch logs"):console.error("Failed to fetch logs"),[];const t=await e.json(),n=userTable.querySelector("tbody");return n.innerHTML="",t.forEach((e=>{const t=document.createElement("tr");t.innerHTML=`<td>${e.time}</td><td>${e.user}</td><td>${e.action}</td>`,n.appendChild(t)})),t}catch(e){return console.error("Failed to fetch logs",e),showToast&&showToast("Failed to fetch logs"),[]}},fetchTasks=async()=>{if(!taskTable)return[];try{const e=await fetch("/api/tasks");if(!e.ok)return showToast?showToast("Failed to fetch tasks"):console.error("Failed to fetch tasks"),[];const t=await e.json(),n=taskTable.querySelector("tbody");return n.innerHTML="",t.forEach((e=>{const t=document.createElement("tr");t.innerHTML=`<td>${e.name}</td><td><button class="btn edit-task-btn">Edit</button> <button class="btn delete-task-btn">Delete</button></td>`,n.appendChild(t)})),t}catch(e){return console.error("Failed to fetch tasks",e),showToast&&showToast("Failed to fetch tasks"),[]}},fetchStatus=async()=>{if(!statusTable)return[];try{const e=await fetch("/api/status");if(!e.ok)return showToast?showToast("Failed to fetch status"):console.error("Failed to fetch status"),[];const t=await e.json(),n=statusTable.querySelector("tbody");return n.innerHTML="",t.forEach((e=>{const t=document.createElement("tr");t.innerHTML=`<td>${e.service}</td><td><span class="label ${"Operational"===e.status?"success":"danger"}">${e.status}</span></td>`,n.appendChild(t)})),t}catch(e){return console.error("Failed to fetch status",e),showToast&&showToast("Failed to fetch status"),[]}};function updateUserMetrics(){if(!userTable||!userCountEl)return;const e=Array.from(userTable.querySelectorAll("tbody tr")),t=e.length,n=e.filter((e=>"Active"===e.querySelector("td:nth-child(2) .label")?.textContent.trim())).length;userCountEl.textContent=t,updateDashboardUserChart(n,t-n)}function initTable(){if(!userTable)return;const e=userTable.querySelector("tbody");let t=Array.from(e.querySelectorAll("tr"));const n=initPagination(userTable),a=()=>{t=Array.from(e.querySelectorAll("tr")),n.update()},o=filterInput&&filterInput.dataset.columns?filterInput.dataset.columns.split(",").map(Number):null,s={},r=userTable.querySelectorAll("th.sortable");r.forEach(((a,o)=>{a.addEventListener("click",(()=>{const l=!s[o];s[o]=l,t.sort(((e,t)=>{const n=e.children[o].textContent.trim(),a=t.children[o].textContent.trim();return l?n.localeCompare(a):a.localeCompare(n)})),e.append(...t),r.forEach((e=>e.removeAttribute("aria-sort"))),a.setAttribute("aria-sort",l?"ascending":"descending"),n.update()}))})),filterInput&&filterInput.addEventListener("input",debounce((()=>{filterTableRows(t,filterInput.value,o),n.update()}),200));const l=e=>{const t=e.querySelector(".edit-user-btn"),n=e.querySelector(".delete-user-btn"),o=()=>{const a=e.children[0].textContent.trim();t&&t.setAttribute("aria-label",`Edit ${a}`),n&&n.setAttribute("aria-label",`Delete ${a}`)};o(),t&&t.addEventListener("click",(()=>{const t=e.children[0].textContent.trim(),n=e.querySelector("td:nth-child(2) .label").textContent.trim();openModal(`<form id="edit-user-form"><h3 id="edit-user-title">Edit User</h3><label>Username<input id="edit-username" type="text" value="${t}" required /></label><label>Status<select id="edit-status"><option value="Active"${"Active"===n?" selected":""}>Active</option><option value="Suspended"${"Suspended"===n?" selected":""}>Suspended</option></select></label><div class="modal-actions"><button type="submit" class="btn">Save</button><button type="button" class="btn" id="cancel-edit">Cancel</button></div></form>`,"edit-user-title");const a=document.getElementById("edit-user-form"),s=document.getElementById("cancel-edit");a.addEventListener("submit",(t=>{t.preventDefault(),e.children[0].textContent=document.getElementById("edit-username").value,o();const n=document.getElementById("edit-status").value,a=e.querySelector("td:nth-child(2) .label");a.textContent=n,a.classList.toggle("success","Active"===n),a.classList.toggle("danger","Active"!==n),updateUserMetrics(),closeModal()})),s.addEventListener("click",closeModal)})),n&&n.addEventListener("click",(()=>{e.remove(),a(),updateUserMetrics()}))};t.forEach(l),n.update(),updateUserMetrics(),addUserBtn&&addUserBtn.addEventListener("click",(()=>{openModal('<form id="add-user-form"><h3 id="add-user-title">Add User</h3><label>Username<input id="new-username" type="text" required /></label><label>Status<select id="new-status"><option value="Active">Active</option><option value="Suspended">Suspended</option></select></label><div class="modal-actions"><button type="submit" class="btn">Add</button><button type="button" class="btn" id="cancel-add">Cancel</button></div></form>',"add-user-title");const t=document.getElementById("add-user-form"),n=document.getElementById("cancel-add");t.addEventListener("submit",(t=>{t.preventDefault();const n=document.getElementById("new-username").value,o=document.getElementById("new-status").value,s=document.createElement("tr");s.innerHTML=`<td>${n}</td><td><span class="label ${"Active"===o?"success":"danger"}">${o}</span></td><td><button class="btn edit-user-btn" aria-label="Edit ${n}">Edit</button> <button class="btn delete-user-btn" aria-label="Delete ${n}">Delete</button></td>`,e.appendChild(s),l(s),a(),updateUserMetrics(),closeModal()})),n.addEventListener("click",closeModal)}))}function initTasks(){if(!taskTable)return;const e=taskTable.querySelector("tbody"),t=initPagination(taskTable),n=e=>{const n=e.querySelector(".edit-task-btn");n&&n.addEventListener("click",(()=>{const t=e.children[0].textContent.trim();openModal(`<form id="edit-task-form"><h3 id="edit-task-title">Edit Task</h3><input id="edit-task-input" type="text" value="${t}" required /><div class="modal-actions"><button type="submit" class="btn">Save</button><button type="button" class="btn" id="cancel-edit-task">Cancel</button></div></form>`,"edit-task-title");const n=document.getElementById("edit-task-form"),a=document.getElementById("cancel-edit-task");n.addEventListener("submit",(t=>{t.preventDefault(),e.children[0].textContent=document.getElementById("edit-task-input").value,closeModal()})),a.addEventListener("click",closeModal)}));const a=e.querySelector(".delete-task-btn");a&&a.addEventListener("click",(()=>{e.remove(),t.update()}))};Array.from(e.querySelectorAll("tr")).forEach(n),t.update(),taskForm&&taskForm.addEventListener("submit",(a=>{a.preventDefault();const o=taskInput.value.trim();if(!o)return;const s=document.createElement("tr");s.innerHTML=`<td>${o}</td><td><button class="btn edit-task-btn">Edit</button> <button class="btn delete-task-btn">Delete</button></td>`,e.appendChild(s),n(s),t.update(),taskForm.reset()}))}function initCalendar(){if(!calendarTable)return;let e=new Date;const t=calendarTable.querySelector("tbody"),n=()=>{const n=e.getFullYear(),a=e.getMonth();calendarMonth.textContent=e.toLocaleDateString(void 0,{month:"long",year:"numeric"});const o=new Date(n,a,1).getDay(),s=new Date(n,a+1,0).getDate();let r="<tr>";for(let e=0;e<o;e++)r+="<td></td>";for(let e=1;e<=s;e++)(o+e-1)%7==0&&1!==e&&(r+="</tr><tr>"),r+=`<td>${e}</td>`;r+="</tr>",t.innerHTML=r};calendarPrev&&calendarPrev.addEventListener("click",(()=>{e.setMonth(e.getMonth()-1),n()})),calendarNext&&calendarNext.addEventListener("click",(()=>{e.setMonth(e.getMonth()+1),n()})),n()}sidebar.querySelectorAll("a").forEach((e=>{e.addEventListener("click",(()=>{sidebarContainer.classList.remove("open"),updateToggle(),showLoader()}))})),themeToggle&&themeToggle.addEventListener("click",(()=>{const e=!document.documentElement.classList.contains("light");document.documentElement.classList.toggle("light",e),themeToggle.setAttribute("aria-pressed",e?"true":"false"),themeToggle.innerHTML=e?sunIcon:moonIcon,localStorage.setItem("theme",e?"light":"dark")}));const notifBtn=document.querySelector(".notification-btn");if(notifBtn&&notifBtn.addEventListener("click",(()=>{showLoader(),fetchNotifications().then((e=>{hideLoader();let t='<h3 id="notifications-title">Notifications</h3><ul class="notifications-list">'+e.map((e=>`<li>${e}</li>`)).join("")+'</ul><div class="modal-actions"><button id="close-notifications" class="btn">Close</button></div>';openModal(t,"notifications-title"),document.getElementById("close-notifications").addEventListener("click",closeModal)}))})),tableSkeleton&&userTable){const e=window.location.pathname;(e.includes("logs")?fetchLogs:fetchUsers)().then((()=>{tableSkeleton.remove(),userTable.hidden=!1,initTable(),e.includes("logs")||updateUserMetrics()}))}taskTable?fetchTasks().then(initTasks):document.getElementById("task-table")&&initTasks(),statusTable&&fetchStatus(),calendarTable&&initCalendar(),form&&form.addEventListener("submit",(e=>{e.preventDefault(),showToast("Settings saved")})),profileForm&&profileForm.addEventListener("submit",(e=>{e.preventDefault();openModal('<h3 id="profile-dialog-title">Save Changes</h3><p>Save profile changes?</p><div class="modal-actions"><button id="confirm-profile" class="btn">Yes</button><button id="cancel-profile" class="btn">Cancel</button></div>',"profile-dialog-title");const t=document.getElementById("confirm-profile"),n=document.getElementById("cancel-profile");t.addEventListener("click",(()=>{closeModal(),showToast("Profile updated")})),n.addEventListener("click",closeModal)})),initReportChart(chartCanvas,document.getElementById("report-range"));const visitorsCanvas=document.getElementById("visitorsChart"),sourceCanvas=document.getElementById("sourceChart"),startInput=document.getElementById("start-date"),endInput=document.getElementById("end-date"),applyBtn=document.getElementById("apply-range");initAnalyticsCharts(visitorsCanvas,sourceCanvas),initDashboardCharts(usersChartCanvas,activityChartCanvas),applyBtn&&applyBtn.addEventListener("click",(()=>updateAnalyticsCharts(startInput,endInput))),applyTheme();const notifBadge=document.getElementById("notification-badge");function fetchNotifications(){return new Promise((e=>{setTimeout((()=>{e(["Server restarted","New user","Backup complete"])}),500)}))}function updateNotificationBadge(){notifBadge&&fetchNotifications().then((e=>{notifBadge.textContent=e.length,notifBadge.style.display=e.length?"inline-block":"none"}))}updateNotificationBadge(),"serviceWorker"in navigator&&window.addEventListener("load",(()=>{navigator.serviceWorker.register("service-worker.js")}));
